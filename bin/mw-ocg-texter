#!/usr/bin/env node
require('es6-shim');
require('prfun');

var program = require('commander');
var texter = require('../');

program
	.version(texter.version)
	.usage('[options] <bundle.zip>')
	.option('-o, --output <filename>',
			'Save text to the given <filename>', null)
	.option('-w, --no-wrap',
			'Don\'t wrap; use newlines only to separate paragraphs')
	.option('-r, --no-refs',
			'Suppress references (and other metadata sections)')
	.option('-v, --verbose',
			'Print verbose progress information')
	.option('-D, --debug',
			'Turn on debugging features (eg, full stack traces on exceptions)')
	.option('--syslog',
			'Log errors using syslog (for production deployments)');

program.parse(process.argv);

if (program.args.length === 0) {
	console.error('A bundle filename is required.');
	return 1;
}
if (program.args.length > 1) {
	console.error('Too many arguments.');
	return 1;
}

var bundlefile = program.args[0];

var Syslog = program.syslog ? require('node-syslog') : {
	init: function() { },
	log: function() { },
	close: function() { }
};
Syslog.init(texter.name, Syslog.LOG_PID | Syslog.LOG_ODELAY, Syslog.LOG_LOCAL0);

var log = function() {
	// en/disable log messages here
	if (program.verbose || program.debug) {
		console.error.apply(console, arguments);
	}
	try {
		Syslog.log(Syslog.LOG_INFO, util.format.apply(this, arguments));
	} catch (err) {
		// This should never happen!  But don't try to convert arguments
		// toString() if it does, since that might fail too.
		Syslog.log(Syslog.LOG_ERR, "Could not format message! "+err);
	}
};

var options = {
	bundle: bundlefile,
	noWrap: !program.wrap,
	noRefs: !program.refs,
	debug: !!program.debug,
	output: program.output,
	log: log
};

texter.convert(options).then(function(status) {
	Syslog.close();
	process.exit(status);
}, function(err) {
	if (program.debug && err.stack) {
		console.error(err.stack);
		Syslog.log(Syslog.LOG_ERR, err.stack);
	} else {
		console.error(err);
		Syslog.log(Syslog.LOG_ERR, err);
	}
	Syslog.close();
	process.exit(1);
}).done();
